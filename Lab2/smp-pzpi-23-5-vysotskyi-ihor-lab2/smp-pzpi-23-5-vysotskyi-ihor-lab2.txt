
МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ



КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ






Звіт
з лабораторної роботи № 2
з дисципліни
«Скриптові мови програмування»









Виконав:	Перевірив:
ст. гр. ПЗПІ-23-5	ст. викладач кафедри ПІ
Висоцький І. О.	Сокорчук Ігор Петрович












2025
 
1 ІСТОРІЯ ЗМІН
№	Дата	Версія звіту	Опис змін та виправлень
1	20.05.2025	0.1	Створено розділ “Історія Змін”

   
2 ЗАВДАННЯ
2.1 Мета роботи
Ознайомитися з основами синтаксису та принципами роботи мови РНР. Отримати практичні навички написання програм скриптовими мовами
2.2 Завдання 
Потрібно створити консольний застосунок «Продовольчий магазин "Весна"».
Ім’я користувача не може бути порожнім і повинно містити хоча б одну літеру.
Користувач не може бути молодшим 7-ми або старшим 150-ти років
Щоб завершити роботу та вийти з програми, потрібно ввести число «0».
У програмі потрібно перевіряти інформацію, яку вводить користувач, а саме:
* обраний пункт меню існує;
* обраний товар існує;
* введена кількість товару більша нуля;
* ім’я користувача містить хча б одну літеру;
* вік користувача становить від 7-ми до 150-ти років.
Робота та функціональність створеної програми повинна збігатися із тестовою програмою: 
3 ОПИС ВИКОНАНОЇ РОБОТИ
3.1 Призначення програми
Програма реалізує текстовий інтерфейс магазину, в якому користувач може:
•	Переглядати список товарів та купувати їх,
•	Отримати підсумковий рахунок,
•	Налаштувати свій профіль,
•	Вийти з програми.

3.2 Опис основних частин коду
3.2.1  Масив товарів (рядки 3–11)
Це асоціативний масив, де ключами є номери товарів (1–7), а значення — масиви з полями:
•	"name" — назва товару;
•	"price" — вартість товару.
3.	$products = [
4.	1 => ["name" => "Молоко пастеризоване", "price" => 12],
5.	2 => ["name" => "Хліб чорний", "price" => 9],
6.	3 => ["name" => "Сир білий", "price" => 21],
7.	4 => ["name" => "Сметана 20%", "price" => 25],
8.	5 => ["name" => "Кефір 1%", "price" => 19],
9.	6 => ["name" => "Вода газована", "price" => 18],
10.	7 => ["name" => "Печиво 'Весна'", "price" => 14]
11.	];
3.2.2  Кошик (рядок 14) 
Порожній масив, у який додаються товари, які обрав користувач.
14.	$cart = [];
3.2.3  Функція showMenu() (рядки 17–26)
Виводить головне меню на екран. Запрошує користувача вибрати одну з опцій:
1 — Вибрати товари
2 — Отримати підсумковий рахунок
3 — Налаштувати свій профіль
0 — Вийти
17.	function showMenu() {
18.	echo "################################\n";
19.	echo "# ПРОДОВОЛЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
20.	echo "################################\n";
21.	echo "1 Вибрати товари\n";
22.	echo "2 Отримати підсумковий рахунок\n";
23.	echo "3 Налаштувати свій профіль\n";
24.	echo "0 Вийти з програми\n";
25.	echo "Введіть команду: ";
26.	}
3.2.4  Допоміжні функції (наведено в додатку В.1)
mb_strlen_custom()
Рахує довжину рядка з урахуванням багатобайтових символів (UTF-8).
getMaxNameLength($products)
Знаходить максимальну довжину назви серед товарів — використовується для вирівнювання колонок.
echoSpaces($strToQuit, $maxLength, $baseLength = 22)
Обчислює кількість пробілів для форматування таблиць товарів або чека.

3.2.5  Функція selectProducts(&$cart, $products) (наведено в додатку В.2)
Реалізує логіку вибору товарів:
•	Виводить список товарів з цінами у вигляді таблиці.
•	Очікує введення номера товару.
o	Якщо користувач вводить «0» — повернення до головного меню.
o	Якщо товар існує:
	Запитує кількість.
	Якщо кількість > 0 і < 100 — додає/оновлює товар у кошику.
	Якщо кількість = 0 — видаляє товар з кошика.
o	Якщо номер неправильний — виводить повідомлення про помилку.

3.2.6  Функція getTotal($cart) (наведено в додатку В.3)
Виводить чек користувача, де для кожного товару з кошика показано:
•	Назву
•	Кількість
•	Ціну
•	Вартість (ціна × кількість)
Також обчислюється разом до сплати.

3.2.7  Функція setProfile() (наведено в додатку В.4)
Запитує у користувача ім’я та вік:
•	Імʼя не повинно бути порожнім і має містити хоча б одну літеру.
•	Вік має бути в межах від 7 до 150 років.
Інформація зберігається тимчасово і відображається у консолі.

3.2.8  Основний цикл програми (наведено в додатку В.5)
Цикл do...while підтримує виконання програми до тих пір, поки користувач не вибере «0» для виходу.
Перевірки, реалізовані в програмі
Чи існує команда в меню
Чи існує товар за введеним номером
Чи кількість товару в межах [1–99]
Чи імʼя не порожнє і містить літери
Чи вік у межах [7–150]
Результат виконання коду при введені некоректної кількості параметрів наведено на рис. Б.2, результат виконання коду при введені коректних параметрів наведено на рис. Б.1.
 
4 ВИСНОВКИ
Програма повністю відповідає функціональності, зазначеній у завданні: відображає меню, дозволяє купувати товари, переглядати кошик, рахунок, налаштовувати профіль і коректно обробляє всі типи введення користувача.
 
ДОДАТОК А
ВІДЕОЗАПИС
https://www.youtube.com/watch?v=v0Y-BnH5oUs 
ДОДАТОК Б
Графічні матеріали, інтерфейс програми:
 
Рисунок Б.1 — Результат роботи програми   Рисунок Б.2 — Результат роботи коду при введенні некоректних значень 
 
ДОДАТОК В
Програмний код
В.1 {pzpi-23-5-...-...-lab1.sh} GitHub …
28.	= mb_strlen_custom($product['name']);
29.	            if ($length > $maxLength) {
30.	                $maxLength = $length;
31.	            }
32.	        }
33.	    }
34.	    return $maxLength;
35.	}
36.	function echoSpaces($strToQuit, $maxLength, $baseLength = 22){
37.	
38.	    if($baseLength - $maxLength < 0){
39.	        $baseLength = $maxLength;
40.	        return $baseLength - mb_strlen_custom($strToQuit);
41.	    }else{
42.	        return $baseLength - mb_strlen_custom($strToQuit);
43.	    }
44.	    
45.	}
В.2 {pzpi-23-5-...-...-lab1.sh} GitHub …
55.	function selectProducts(&$cart, $products) {
56.	    $maxNameLength = getMaxNameLength($products);
57.	    do {
58.	        //$spaces = str_repeat(" ", echoSpaces($products, ));
59.	        echo "№  НАЗВА" .str_repeat(" ", echoSpaces("НАЗВА",$maxNameLength))."ЦІНА\n";
60.	        foreach ($products as $key => $product) {
61.	            $name = $product['name'];
62.	            //printf("%-2d %-22s", $key, $name);
63.	            echo $key. "  " . $name .str_repeat(" ", echoSpaces($name,$maxNameLength)). $product['price']."\n" ;
64.	        }
65.	        echo "-----------\n";
66.	        echo "0  ПОВЕРНУТИСЯ\n";
67.	        echo "Виберіть товар: ";
68.	        $productNumber = (int) trim(fgets(STDIN));
69.	
70.	        if ($productNumber == 0) {
71.	            break;
72.	        } elseif (isset($products[$productNumber])) {
73.	            echo "Вибрано: {$products[$productNumber]['name']}\n";
74.	            echo "Введіть кількість, штук: ";
75.	            $quantity = (int) trim(fgets(STDIN));
76.	
77.	            if ($quantity > 0 && $quantity < 100) {
78.	                if (isset($cart[$productNumber])) {
79.	                    $cart[$productNumber]['quantity'] += $quantity;
80.	                } else {
81.	                    $cart[$productNumber] = [
82.	                        'name' => $products[$productNumber]['name'],
83.	                        'price' => $products[$productNumber]['price'],
84.	                        'quantity' => $quantity
85.	                    ];
86.	                }
87.	                echo "У КОШИКУ:\n";
88.	                echo "НАЗВА" .str_repeat(" ", echoSpaces("НАЗВА",$maxNameLength))."КІЛЬКІСТЬ\n";
89.	
90.	                foreach ($cart as $item) {
91.	                    echo "{$item['name']}  {$item['quantity']}\n";
92.	                }
93.	            } elseif ($quantity == 0) {
94.	                unset($cart[$productNumber]);
95.	                echo "ВИДАЛЯЮ З КОШИКА\n";
96.	                if (empty($cart)) {
97.	                    echo "КОШИК ПОРОЖНІЙ\n";
98.	                }
99.	            } else {
100.	                echo "ПОМИЛКА! Кількість повинна бути більше 0 і менше 100.\n";
101.	            }
102.	        } else {
103.	            echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
104.	        }
105.	    } while (true);
106.	}
В.3 {pzpi-23-5-...-...-lab1.sh} GitHub …
108.	function getTotal($cart) {
109.	    $maxNameLength = getMaxNameLength($cart);
110.	    echo "№  НАЗВА" .str_repeat(" ", echoSpaces("НАЗВА",$maxNameLength))."ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
111.	    //echo "№  НАЗВА                  ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
112.	    $total = 0;
113.	    foreach ($cart as $key => $item) {
114.	        $cost = $item['price'] * $item['quantity'];
115.	        $total += $cost;       
116.	        echo $key. "  " . $item['name'];
117.	        echo str_repeat(" ", echoSpaces($item['name'],$maxNameLength));
118.	        echo $item['price'];
119.	        echo str_repeat(" ", echoSpaces($item['price'],0, 6));
120.	        echo $item['quantity'];
121.	        echo str_repeat(" ", echoSpaces($item['quantity'],0, 11));
122.	        echo $cost."\n" ;
123.	    }
124.	    echo "РАЗОМ ДО CПЛАТИ: $total\n";
125.	}
В.4 {pzpi-23-5-...-...-lab1.sh} GitHub …
128.	function setProfile() {
129.	    do {
130.	        echo "Ваше імʼя: ";
131.	        $name = trim(fgets(STDIN));
132.	    } while (empty($name) || !preg_match("/[a-zA-Zа-яА-Я]/", $name));
133.	
134.	    do {
135.	        echo "Ваш вік: ";
136.	        $age = (int) trim(fgets(STDIN));
137.	    } while ($age < 7 || $age > 150);
138.	
139.	    echo "Ваш профіль:\nІмʼя: $name\nВік: $age\n";
140.	}
В.5 {pzpi-23-5-...-...-lab1.sh} GitHub …
141.	do {
142.	    showMenu();
143.	    // Читання введеного значення
144.	    $input = trim(fgets(STDIN));
145.	
146.	    // Перевірка, чи введено число
147.	    if (is_numeric($input)) {
148.	        $command = (int) $input;
149.	    } else {
150.	        // Якщо введено не число
151.	        $command = -1; // Призначаємо недопустиме значення
152.	    }
153.	
154.	    switch ($command) {
155.	        case 1:
156.	            selectProducts($cart, $products);
157.	            break;
158.	        case 2:
159.	            getTotal($cart);
160.	            break;
161.	        case 3:
162.	            setProfile();
163.	            break;
164.	        case 0:
165.	            echo "Вихід з програми...\n";
166.	            break;
167.	        default:
168.	            echo "ПОМИЛКА! Введіть правильну команду\n";
169.	            break;
170.	    }
171.	} while ($command != 0);
172.	?>

